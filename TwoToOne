/*
Description:
Take 2 strings s1 and s2 including only letters from ato z. Return a new sorted string, the longest possible, containing distinct letters - each taken only once - coming from s1 or s2.

Examples:
a = "xyaabbbccccdefww"
b = "xxxxyyyyabklmopq"
longest(a, b) -> "abcdefklmopqwxy"

a = "abcdefghijklmnopqrstuvwxyz"
longest(a, a) -> "abcdefghijklmnopqrstuvwxyz"

*/

import java.util.regex.Pattern;
public class TwoToOne {
    
    public static String longest (String s1, String s2) {
      String abc = "abcdefghijklmnopqrstuvwxyz";
      String cadena = "";
      for (int i = 0; i < abc.length(); i++) {
        if (s1.contains(String.valueOf(abc.charAt(i))) || s2.contains(String.valueOf(abc.charAt(i)))){
          cadena += String.valueOf(abc.charAt(i));
        }
      }
      return cadena;
    }
}
